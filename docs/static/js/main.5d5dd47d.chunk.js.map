{"version":3,"sources":["types/types.js","auth/AuthContext.js","auth/authReducer.js","Routers/PirvateRoute.js","components/login/LoginScreen.js","components/data/heros.js","components/heroes/HeroCard.js","components/heroes/HeroList.js","components/selectors/getHeroesByPublisher.js","components/dc/DcScreen.js","components/heroes/HeroScreen.js","components/selectors/getHeroById.js","components/Marvel/MarvelScreen.js","components/search/SearchScreen.js","hooks/useForm.js","components/selectors/getHeroesByName.js","components/ui/Navbar.js","Routers/DashboardRoutes.js","Routers/PublicRouter.js","Routers/AppRouter.js","HeroesApp.js","index.js"],"names":["types","login","logout","AuthContext","createContext","require","authReducer","state","action","type","payload","logged","PirvateRoute","isAuthenticated","Component","component","rest","localStorage","setItem","location","pathname","props","to","LoginScreen","history","dispatch","useContext","className","onClick","lasPath","getItem","name","replace","heroes","HeroCard","id","superhero","alter_ego","publisher","first_appearance","characters","style","maxWidth","src","alt","HeroList","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","key","DcScreen","HeroScreen","heroeId","useParams","find","length","push","goBack","MarvelScreen","SearchScreen","useLocation","queryString","parse","search","q","initialState","useState","values","setValues","reset","handleInputChange","target","value","useForm","searchText","heroesFiltered","toLocaleLowerCase","onSubmit","e","preventDefault","placeholder","autoComplete","onChange","Navbar","user","useHistory","activeClassName","exact","DashboardRoutes","path","PublicRouter","AppRouter","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d5dd47d.chunk.js","sourcesContent":["export const types={\r\n    login:'[auth] login',\r\n    logout:'[auth] logout'\r\n}","import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext();","const { types } = require(\"../types/types\");\r\n\r\n/* const state={\r\n   name:'Angel',\r\n   logged:true \r\n} */\r\n\r\nexport const authReducer =(state={},action)=>{\r\n    switch (action.type) {\r\n        case types.login:\r\n            \r\n            return{\r\n                ...action.payload,\r\n                logged:true\r\n            }\r\n        case types.logout:\r\n            return{\r\n                logged:false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PirvateRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n   \r\n    localStorage.setItem('lasPath', rest.location.pathname)\r\n    return (\r\n        <Route {...rest}\r\n            component={(props)=>(\r\n\r\n                (isAuthenticated)\r\n                    ?(<Component {...props}/>)\r\n                    :(<Redirect to=\"/login\"/>)\r\n\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPirvateRoute.propTypes={\r\n    isAuthenticated:PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useContext } from 'react'\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { types } from '../../types/types';\r\n\r\nexport const LoginScreen = ({history}) => {\r\n\r\n    const {dispatch} = useContext(AuthContext)\r\n\r\n    const handleLogin=()=>{\r\n       // history.push('/');\r\n       const lasPath=localStorage.getItem('lasPath') || '/';\r\n       dispatch({\r\n           type:types.login,\r\n           payload:{\r\n               name:'Angelito'\r\n            }\r\n        })\r\n         history.replace(lasPath);\r\n    }\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>LoginScreen</h1>\r\n            <hr/>\r\n\r\n            <button\r\n                className=\"btn btn-primary\"           \r\n                onClick={handleLogin}\r\n            >Login\r\n\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export  const heroes = [\r\n    {\r\n        'id': 'dc-batman',\r\n        'superhero':'Batman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Bruce Wayne',\r\n        'first_appearance':'Detective Comics #27',\r\n        'characters':'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero':'Superman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Kal-El',\r\n        'first_appearance':'Action Comics #1',\r\n        'characters':'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero':'Flash', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Jay Garrick',\r\n        'first_appearance':'Flash Comics #1',\r\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero':'Green Lantern', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Alan Scott',\r\n        'first_appearance':'All-American Comics #16',\r\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero':'Green Arrow', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Oliver Queen',\r\n        'first_appearance':'More Fun Comics #73',\r\n        'characters':'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero':'Wonder Woman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Princess Diana',\r\n        'first_appearance':'All Star Comics #8',\r\n        'characters':'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero':'Martian Manhunter', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'J\\'onn J\\'onzz',\r\n        'first_appearance':'Detective Comics #225',\r\n        'characters':'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero':'Robin/Nightwing', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dick Grayson',\r\n        'first_appearance':'Detective Comics #38',\r\n        'characters':'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero':'Blue Beetle', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dan Garret',\r\n        'first_appearance':'Mystery Men Comics #1',\r\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero':'Black Canary', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dinah Drake',\r\n        'first_appearance':'Flash Comics #86',\r\n        'characters':'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero':'Spider Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Peter Parker',\r\n        'first_appearance':'Amazing Fantasy #15',\r\n        'characters':'Peter Parker'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero':'Captain America', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Steve Rogers',\r\n        'first_appearance':'Captain America Comics #1',\r\n        'characters':'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero':'Iron Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Tony Stark',\r\n        'first_appearance':'Tales of Suspense #39',\r\n        'characters':'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero':'Thor', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Thor Odinson',\r\n        'first_appearance':'Journey into Myster #83',\r\n        'characters':'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero':'Hulk', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Bruce Banner',\r\n        'first_appearance':'The Incredible Hulk #1',\r\n        'characters':'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero':'Wolverine', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'James Howlett',\r\n        'first_appearance':'The Incredible Hulk #180',\r\n        'characters':'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero':'Daredevil', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Matthew Michael Murdock',\r\n        'first_appearance':'Daredevil #1',\r\n        'characters':'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero':'Hawkeye', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Clinton Francis Barton',\r\n        'first_appearance':'Tales of Suspense #57',\r\n        'characters':'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero':'Cyclops', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Scott Summers',\r\n        'first_appearance':'X-Men #1',\r\n        'characters':'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero':'Silver Surfer', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Norrin Radd',\r\n        'first_appearance':'The Fantastic Four #48',\r\n        'characters':'Norrin Radd'\r\n    }\r\n]","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const HeroCard = ({\r\n    id,\r\n    superhero,\r\n    publisher,\r\n    alter_ego,\r\n    first_appearance,\r\n    characters}) => {\r\n    return (\r\n        <div className=\"card ms-3\" style={{maxWidth:540}}>\r\n            <div className=\"row no-gutters\">\r\n                <div className=\"col-md-4\">\r\n                    <img src={`./assets/heroes/${id}.jpg`} className=\"card-img\" alt={superhero}></img>\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{superhero}</h5>\r\n                        <p className=\"card-text\">\r\n                            {alter_ego}\r\n                        </p>\r\n                        {\r\n                            (alter_ego!==characters)\r\n                                && <p className=\"card-text\">{characters}</p>\r\n                        }\r\n                        <p className=\"card-text\">\r\n                            <small className=\"text-muted\">{first_appearance}</small>\r\n                        </p>\r\n                        <Link to={`./hero/${id}`}>\r\n                            Más...\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { getHeroesByPublisher } from '../selectors/getHeroesByPublisher'\r\nimport { HeroCard } from './HeroCard'\r\n\r\nexport const HeroList = ({publisher}) => {\r\n\r\n    const heroes=useMemo(() => getHeroesByPublisher(publisher), [publisher])\r\n\r\n    return (\r\n        <div className=\"card-columns animate__animated animate__fadeInDown\">\r\n            {\r\n                heroes.map(hero=>(\r\n                    <HeroCard \r\n                        key={hero.id}\r\n                        {...hero}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport { heroes } from '../data/heros'\r\n\r\nexport const getHeroesByPublisher = (publisher) => {\r\n\r\n    const validPublishers=['DC Comics','Marvel Comics'];\r\n\r\n    if(!validPublishers.includes(publisher)){\r\n        throw new Error(`Publisher \"${publisher}\" no es correcto`);\r\n    }\r\n\r\n    return heroes.filter(hero=>hero.publisher===publisher);\r\n \r\n}\r\n","import React from 'react'\r\nimport { HeroList } from '../heroes/HeroList'\r\n\r\nexport const DcScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>Dc Screen</h1>\r\n            <hr/>\r\n            <HeroList\r\n                publisher='DC Comics'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { Redirect, useParams } from 'react-router-dom'\r\nimport { getHeroById } from '../selectors/getHeroById';\r\n\r\nexport const HeroScreen = ({history}) => {\r\n\r\n    const {heroeId}=useParams();\r\n\r\n    const hero=useMemo(() => getHeroById(heroeId), [heroeId])\r\n\r\n\r\n\r\n    if(!hero){\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    const hanledReturn=()=>{\r\n        if(history.length<=2){\r\n            history.push('/')\r\n        }else{\r\n\r\n            history.goBack();\r\n        }\r\n    }\r\n\r\n    const {\r\n\r\n        superhero,\r\n        publisher,\r\n        alter_ego,\r\n        first_appearance,\r\n        characters\r\n\r\n    }=hero;\r\n\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <div className=\"col-4\">\r\n                <img\r\n                    src={`../assets/heroes/${heroeId}.jpg`}\r\n                    alt={superhero}\r\n                    className=\"img-thumbnail animate__animated animate__fadeInDown\"\r\n                />\r\n                \r\n            </div>\r\n            <div className=\"col-8\">\r\n                <h3>{superhero}</h3>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\"><b>Alter ego</b> { alter_ego } </li>\r\n                    <li className=\"list-group-item\"><b>Publisher</b> { publisher } </li>\r\n                    <li className=\"list-group-item\"><b>First appearance</b> { first_appearance } </li>\r\n                </ul>\r\n                <h5>Character</h5>\r\n                <p>{characters}</p>\r\n\r\n                <button \r\n                    className=\"btn btn-outline-info\"\r\n                    onClick={hanledReturn}\r\n                    >\r\n                 Return\r\n                </button>\r\n\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n","\r\nimport { heroes } from '../data/heros'\r\n\r\nexport const getHeroById = (id) => {\r\n\r\n    \r\n\r\n    return heroes.find(hero=>hero.id===id);\r\n \r\n}\r\n","import React from 'react'\r\nimport { HeroList } from '../heroes/HeroList'\r\n\r\nexport const MarvelScreen = () => {\r\n    return (\r\n        <div >\r\n            <h1>Marvel</h1>\r\n            <hr/>\r\n            <HeroList\r\n                publisher='Marvel Comics'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport queryString from 'query-string'\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\n//import { heroes } from '../data/heros'\r\nimport { HeroCard } from '../heroes/HeroCard';\r\nimport { getHeroesByName } from '../selectors/getHeroesByName';\r\n\r\nexport const SearchScreen = ({history}) => {\r\n\r\n    const location=useLocation();\r\n    const {q = ''} = queryString.parse(location.search);\r\n   \r\n\r\n    \r\n    const [{searchText},handleInputChange]=useForm({\r\n        searchText:q\r\n    });\r\n    \r\n    //const heroesFiltered=getHeroesByName(searchText); \r\n    const heroesFiltered=useMemo(() => getHeroesByName(q), [q])\r\n\r\n    const handleSearch=(e)=>{\r\n        e.preventDefault();\r\n\r\n        \r\n        \r\n       history.push(`?q=${searchText}`);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>SearchScreen</h1>\r\n            <hr/>\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                    <h4>Search Form</h4>\r\n                    <hr/>\r\n                    <form onSubmit={handleSearch}>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"searchText\"\r\n                            placeholder=\"Find your hero\"\r\n                            className=\"form-control\"\r\n                            value={searchText}\r\n                            autoComplete=\"off\"\r\n                            onChange={handleInputChange}\r\n\r\n                        />\r\n                        <button\r\n                            type=\"submi\"\r\n                            className=\"btn m-1 btn-block btn-outline-primary\"\r\n                            \r\n                        >\r\n                            Search\r\n                        </button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div className=\"row \">\r\n                <div className=\"col-12\">\r\n                    <h4>Resultados</h4>\r\n                    <hr/>\r\n                    {\r\n                        (heroesFiltered.length===0)\r\n                        &&\r\n                        <div className=\"alert alert-danger\">\r\n                            There is no a hero with {q}\r\n                        </div>\r\n                    }\r\n                    <div className=\"card-columns\">\r\n\r\n                        {\r\n                            heroesFiltered.map(hero=>(\r\n                                <HeroCard\r\n                                    key={hero.id}\r\n                                    {...hero}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = (initialState={}) => {\r\n\r\n    const [values, setValues] = useState(initialState)\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n        //alert('Estamos en el reset');\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]:target.value\r\n        });\r\n       \r\n    \r\n\r\n    }\r\n\r\n\r\n    return [values, handleInputChange, reset];\r\n  \r\n}\r\n","import {heroes} from '../data/heros'\r\n\r\nexport const getHeroesByName = (name)=>{\r\n\r\n    /* if(name===''){\r\n        return[];\r\n    } */\r\n\r\n    name=name.toLocaleLowerCase();\r\n    return heroes.filter(hero=>hero.superhero.toLocaleLowerCase().includes(name))\r\n\r\n}","import React, { useContext } from 'react'\r\nimport { Link, NavLink, useHistory } from 'react-router-dom'\r\nimport { AuthContext } from '../../auth/AuthContext'\r\nimport { types } from '../../types/types'\r\n\r\nexport const Navbar = () => {\r\n    const {user:{name},dispatch}=useContext(AuthContext)\r\n    const history=useHistory();\r\n    const hanleLogout = () =>{\r\n        history.replace('/login');\r\n        dispatch({\r\n            type:types.logout,\r\n            \r\n        })\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            \r\n            <Link \r\n                className=\"navbar-brand\" \r\n                to=\"/\"\r\n            >\r\n                Asociaciones\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/marvel\"\r\n                    >\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/dc\"\r\n                    >\r\n                        DC\r\n                    </NavLink>\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/search\"\r\n                    >\r\n                        Search\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                   \r\n                   <span className=\"nav-item nav-link text-info\">\r\n                       {name}\r\n                   </span>\r\n                   \r\n                    <button \r\n                       \r\n                        className=\"nav-item nav-link btn\" \r\n                        onClick={hanleLogout}\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { DcScreen } from '../components/dc/DcScreen'\r\nimport { HeroScreen } from '../components/heroes/HeroScreen'\r\nimport { MarvelScreen } from '../components/Marvel/MarvelScreen'\r\nimport { SearchScreen } from '../components/search/SearchScreen'\r\nimport { Navbar } from '../components/ui/Navbar'\r\n\r\nexport const DashboardRoutes = () => {\r\n    return (\r\n        <>\r\n\r\n            <Navbar/>\r\n\r\n            <div className=\"container mt-5\">\r\n                <Switch>\r\n                    <Route exact path=\"/marvel\" component={MarvelScreen}/>\r\n                    <Route exact path=\"/hero/:heroeId\" component={HeroScreen}/>\r\n                    <Route exact path=\"/dc\" component={DcScreen}/>\r\n                    <Route exact path=\"/search\" component={SearchScreen}/>\r\n                    <Redirect to=\"/marvel\"/>\r\n                </Switch>\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nexport const PublicRouter = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component={(props)=>(\r\n\r\n                (!isAuthenticated)\r\n                    ?(<Component {...props}/>)\r\n                    :(<Redirect to=\"/\"/>)\r\n\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRouter.propTypes={\r\n    isAuthenticated:PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useContext } from 'react'\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n} from 'react-router-dom';\r\n\r\nimport { PirvateRoute } from './PirvateRoute';\r\nimport { LoginScreen } from '../components/login/LoginScreen';\r\nimport { DashboardRoutes } from './DashboardRoutes';\r\nimport { AuthContext } from '../auth/AuthContext';\r\nimport { PublicRouter } from './PublicRouter';\r\n\r\n\r\n\r\nexport const AppRouter = () => {\r\n  const {user} = useContext(AuthContext)\r\n\r\n    return (\r\n      <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRouter \r\n            exact \r\n            path=\"/login\" \r\n            component={LoginScreen}\r\n            isAuthenticated={user.logged}\r\n            />\r\n          <PirvateRoute  \r\n            path=\"/\" \r\n            component={DashboardRoutes}\r\n            isAuthenticated={user.logged}\r\n            />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n    )\r\n}\r\n","import React, { useEffect, useReducer } from 'react'\r\nimport { AuthContext } from './auth/AuthContext'\r\nimport { authReducer } from './auth/authReducer'\r\nimport { AppRouter } from './Routers/AppRouter'\r\n\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('user')) || {logged:false}\r\n}\r\n\r\nexport const HeroesApp = () => {\r\n\r\n    const [user, dispatch] = useReducer(authReducer, {}, init)\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('user', JSON.stringify(user))\r\n       \r\n    }, [user])\r\n\r\n    return (\r\n        <AuthContext.Provider value={{user,dispatch}}>\r\n            <AppRouter/>\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HeroesApp } from './HeroesApp';\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <HeroesApp/>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}